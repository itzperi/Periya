{
  "name": "Ready Launch AI Agent",
  "nodes": [
    {
      "parameters": {},
      "id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
      "name": "When clicking 'Test workflow'",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "url": "https://www.linkedin.com/jobs/search/?keywords=software%20developer%20hiring&f_TPR=r86400",
        "options": {}
      },
      "id": "b2c3d4e5-f6a7-8901-bcde-f12345678901",
      "name": "Scrape LinkedIn Jobs",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Extract company info from LinkedIn HTML\nconst html = $input.item.json.data || '';\n\n// Sample company data (replace with actual parsing)\nconst companies = [\n  {\n    company_name: 'TechStartup Inc',\n    company_website: 'https://techstartup.com',\n    job_title: 'Senior Full Stack Developer',\n    job_description: 'Looking for experienced developer to build our MVP'\n  }\n];\n\nreturn companies.map(company => ({\n  json: {\n    ...company,\n    company_domain: company.company_website.replace(/https?:\\/\\/(www\\.)?/, '').split('/')[0]\n  }\n}));"
      },
      "id": "c3d4e5f6-a7b8-9012-cdef-123456789012",
      "name": "Extract Companies",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "url": "=https://api.snov.io/v1/get-domain-emails-with-info?domain={{$json.company_domain}}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "snovIoApi",
        "options": {}
      },
      "id": "d4e5f6a7-b8c9-0123-def1-234567890123",
      "name": "Find Email Snov.io",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Filter founder emails\nconst founderKeywords = ['founder', 'ceo', 'cto'];\nconst emails = $input.item.json.data?.emails || [];\n\nconst founder = emails.find(e => \n  founderKeywords.some(k => (e.position || '').toLowerCase().includes(k))\n) || emails[0];\n\nif (!founder) return [];\n\nreturn [{\n  json: {\n    company_name: $input.item.json.company_name,\n    company_website: $input.item.json.company_website,\n    job_description: $input.item.json.job_description,\n    founder_name: `${founder.firstName || ''} ${founder.lastName || ''}`.trim(),\n    founder_email: founder.email,\n    founder_position: founder.position || 'Founder'\n  }\n}];"
      },
      "id": "e5f6a7b8-c9d0-1234-ef12-345678901234",
      "name": "Filter Founder",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "url": "=https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=YOUR_GEMINI_API_KEY",
        "method": "POST",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [{\n    \"parts\": [{\n      \"text\": \"Analyze this company for sales outreach:\\n\\nCompany: {{$json.company_name}}\\nFounder: {{$json.founder_name}}\\nJob: {{$json.job_description}}\\nWebsite: {{$json.company_website}}\\n\\nIdentify:\\n1. Pain points (3-5)\\n2. Automation opportunities (2-3)\\n3. Cost-cutting potential\\n4. Why they need scalable MVP in weeks not months\\n5. How Ready Launch (10X cheaper than agencies, builds MVPs in weeks, built Sora AI video tool) solves their problems\\n\\nOutput JSON only:\\n{\\n  \\\"pain_points\\\": [],\\n  \\\"automation_needs\\\": [],\\n  \\\"cost_cutting\\\": \\\"\\\",\\n  \\\"our_solution\\\": \\\"\\\",\\n  \\\"hook\\\": \\\"\\\"\\n}\"\n    }]\n  }]\n}",
        "options": {}
      },
      "id": "f6a7b8c9-d0e1-2345-f123-456789012345",
      "name": "AI Research (Gemini)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Parse Gemini response\nconst response = $input.item.json;\nlet insights = {};\n\ntry {\n  const text = response.candidates[0].content.parts[0].text;\n  const jsonMatch = text.match(/\\{[\\s\\S]*\\}/);\n  insights = jsonMatch ? JSON.parse(jsonMatch[0]) : {};\n} catch (e) {\n  insights = {\n    pain_points: ['scaling development'],\n    automation_needs: ['manual processes'],\n    cost_cutting: 'Save $50k with MVP approach',\n    our_solution: 'Build MVP in 4 weeks',\n    hook: 'I noticed your company is hiring'\n  };\n}\n\nreturn [{\n  json: {\n    ...$input.item.json,\n    ai_insights: insights\n  }\n}];"
      },
      "id": "a7b8c9d0-e1f2-3456-1234-567890123456",
      "name": "Parse Insights",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1560, 300]
    },
    {
      "parameters": {
        "url": "=https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=YOUR_GEMINI_API_KEY",
        "method": "POST",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [{\n    \"parts\": [{\n      \"text\": \"Write personalized cold email for Ready Launch to {{$json.founder_name}} at {{$json.company_name}}.\\n\\nInsights: {{JSON.stringify($json.ai_insights)}}\\n\\nMention:\\n- Specific pain points\\n- We build MVPs in WEEKS not months\\n- 10X cheaper than agencies (save $40k-150k)\\n- Our Sora AI video tool (Krishna-Mahabharata)\\n- Launch 3-6 months faster\\n\\nUnder 200 words. HTML format. Conversational tone. Call to action: 15-min chat.\\n\\nWrite ONLY email body (no subject).\"\n    }]\n  }]\n}",
        "options": {}
      },
      "id": "b8c9d0e1-f2a3-4567-2345-678901234567",
      "name": "AI Write Email",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1780, 300]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Extract email from Gemini\nconst response = $input.item.json;\nlet emailBody = '';\n\ntry {\n  emailBody = response.candidates[0].content.parts[0].text;\n  emailBody = emailBody.replace(/```html\\n?/g, '').replace(/```/g, '').trim();\n} catch (e) {\n  emailBody = `Hi ${$input.item.json.founder_name},<br><br>I noticed ${$input.item.json.company_name} is hiring. At Ready Launch, we build MVPs in weeks, not months - at 10X lower cost than agencies.<br><br>Would you be open to a 15-min chat?<br><br>Best,<br>Ready Launch`;\n}\n\nreturn [{\n  json: {\n    ...$input.item.json,\n    email_body: emailBody\n  }\n}];"
      },
      "id": "c9d0e1f2-a3b4-5678-3456-789012345678",
      "name": "Extract Email",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2000, 300]
    },
    {
      "parameters": {
        "operation": "send",
        "resource": "message",
        "message": {
          "to": "={{$json.founder_email}}",
          "subject": "=Quick question about {{$json.company_name}}",
          "body": "={{$json.email_body}}",
          "bodyType": "html"
        }
      },
      "id": "d0e1f2a3-b4c5-6789-4567-890123456789",
      "name": "Send Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [2220, 300],
      "credentials": {
        "gmailOAuth2": {
          "id": "1",
          "name": "Gmail account"
        }
      }
    }
  ],
  "connections": {
    "When clicking 'Test workflow'": {
      "main": [
        [
          {
            "node": "Scrape LinkedIn Jobs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape LinkedIn Jobs": {
      "main": [
        [
          {
            "node": "Extract Companies",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Companies": {
      "main": [
        [
          {
            "node": "Find Email Snov.io",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Email Snov.io": {
      "main": [
        [
          {
            "node": "Filter Founder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Founder": {
      "main": [
        [
          {
            "node": "AI Research (Gemini)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Research (Gemini)": {
      "main": [
        [
          {
            "node": "Parse Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Insights": {
      "main": [
        [
          {
            "node": "AI Write Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Write Email": {
      "main": [
        [
          {
            "node": "Extract Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Email": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
}
